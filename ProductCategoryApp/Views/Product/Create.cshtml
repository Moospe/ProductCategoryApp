@using ProductCategoryApp.Data
@model ProductCategoryApp.Models.ProductModel

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>ProductModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <select asp-for="Category.ID" class="form-control">
                    @{
                        using (CategoryData data = new CategoryData())
                        {
                            foreach (CategoryModel category in data.Read())
                            {
                                <option value="@category.ID">@category.Name</option>
                            }
                        }
                    }
                </select>
                <span asp-validation-for="Category.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CurrentValue" class="control-label"></label>
                <input asp-for="CurrentValue" class="form-control" />
                <span asp-validation-for="CurrentValue" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseValue" class="control-label"></label>
                <input asp-for="PurchaseValue" class="form-control" />
                <span asp-validation-for="PurchaseValue" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Weight" class="control-label"></label>
                <input asp-for="Weight" class="form-control" />
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Length_X" class="control-label"></label>
                <input asp-for="Length_X" class="form-control" />
                <span asp-validation-for="Length_X" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Length_Y" class="control-label"></label>
                <input asp-for="Length_Y" class="form-control" />
                <span asp-validation-for="Length_Y" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Length_Z" class="control-label"></label>
                <input asp-for="Length_Z" class="form-control" />
                <span asp-validation-for="Length_Z" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Color" class="control-label"></label>
                <input asp-for="Color" class="form-control" />
                <span asp-validation-for="Color" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
