@using ProductCategoryApp.Data
@model IEnumerable<ProductCategoryApp.Models.ProductModel>

@{
    ViewData["Title"] = "Index";
    decimal totalDiff = 0;
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="form-group">
    <select class="form-control" onchange="document.location.href = this.value">
        <option value="">Select category...</option>
        <option value="/">All</option>
        @{
            using (CategoryData data = new CategoryData())
            {
                foreach (CategoryModel category in data.Read())
                {
                    <option value="product/filter/@category.Name">@category.Name</option>
                }
            }
        }
    </select>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CurrentValue)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentValue)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
            totalDiff += (item.CurrentValue - item.PurchaseValue);
        }

    </tbody>
</table>
<div>
    total Diff: @(totalDiff)
</div>